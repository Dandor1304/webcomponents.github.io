{"version":3,"sources":["components/field.js","components/languages.js","components/translate.js","App.js","index.js"],"names":["_ref","label","value","onChange","React","createElement","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","concat","open","setOpen","useState","onClick","map","_ref2","key","Math","random","href","onSelect","doTranslation","async","input","languageCode","cancelToken","url","encodeURIComponent","data","axios","get","token","def","length","tr","text","err","console","error","Translator","translated","setTranslated","useEffect","document","title","CancelToken","source","then","cancel","Fragment","readOnly","style","display","App","setLanguage","setText","Field","Translate","render","querySelector"],"mappings":"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","file":"static/js/main.9ab29614.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useState } from \"react\";\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"English\", value: \"en\" },\n  { label: \"Simplified Chinese\", value: \"zh-CN\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Swahili\", value: \"sw\" },\n  { label: \"Thai\", value: \"th\" }\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n  if (language === undefined) {\n    language = \"en\";\n  }\n  const languageConfig = LANGUAGES.find((l) => l.value === language);\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = (language) => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return (\n    <div>\n      <label className=\"label\">Введите язык</label>\n      <div className={`dropdown ${open && \"is-active\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" onClick={() => setOpen(!open)}>\n            <span>{languageConfig.label}</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" />\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {LANGUAGES.map(({ label, value }) => {\n              return (\n                <a\n                  key={Math.random()}\n                  href=\"#\"\n                  onClick={() => onSelect(value)}\n                  className=\"dropdown-item\"\n                >\n                  {label}\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst doTranslation = async (input, languageCode, cancelToken) => {\n  const y = \"https://dictionary.yandex.net/api/v1/dicservice.json\";\n  const url = `${y}/lookup?key=dict.1.1.20251002T203108Z.04bbd37197c19fec.c757d8652ab09c412733b1e935602f84f8bf1c45&lang=ru-${languageCode}&text=${encodeURIComponent(\n    input\n  )}`;\n\n  try {\n    const { data } = await axios.get(url, { cancelToken: cancelToken.token });\n\n    if (\n      data.def &&\n      data.def.length > 0 &&\n      data.def[0].tr &&\n      data.def[0].tr.length > 0\n    ) {\n      return data.def[0].tr[0].text;\n    }\n\n    return \"\";\n  } catch (err) {\n    console.error(err);\n    return \"\";\n  }\n};\n\nexport default function Translator({ language, text }) {\n  const [translated, setTranslated] = useState(\"\");\n  useEffect(() => {\n    document.title = \"dandor\";\n  }, []);\n\n  useEffect(() => {\n    if (!text) return;\n\n    const cancelToken = axios.CancelToken.source();\n\n    doTranslation(text, language, cancelToken).then(setTranslated);\n\n    return () => {\n      try {\n        cancelToken.cancel();\n      } catch (err) {}\n    };\n  }, [text, language]);\n\n  return (\n    <>\n      <input value={text} readOnly style={{ display: \"none\" }} />\n      <h1>{translated}</h1>\n    </>\n  );\n}\n\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Field from \"./components/field\";\nimport Languages from \"./components/languages\";\nimport Translate from \"./components/translate\";\n\nexport default function App() {\n  const [language, setLanguage] = useState(\"en\");\n  const [text, setText] = useState(\"Реакция\");\n\n  return (\n    <div>\n      <Field label=\"Введите русские слова\" onChange={setText} value={text} />\n      <Languages language={language} onLanguageChange={setLanguage} />\n      <hr />\n      <Translate text={text} language={language} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}